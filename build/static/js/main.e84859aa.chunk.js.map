{"version":3,"sources":["PokemonDetails.jsx","PokemonList.jsx","PokemonSearch.js","reportWebVitals.js","Register.jsx","PokemonTracker.jsx","Logout.jsx","JobSearch.js","JobList.jsx","AllJobs.jsx","AddJob.jsx","index.js"],"names":["pokemonName","useParams","useState","pokemon","setPokemon","useEffect","axios","get","then","response","data","error","console","log","pokemonComponent","name","health","PokemonSearchBar","allPokemon","setAllPokemon","catch","pokemonListComponent","map","to","App","formInput","setFormInput","errorMsg","setError","type","value","onChange","e","target","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","props","navigate","useNavigate","password","username","userData","setUserData","loggedInName","setLoggedInName","post","PokemonTracker","pokemonForm","setPokemonForm","myPokemon","setMyPokemon","getMyPokemon","pokemonElement","push","Logout","searchedJob","setSearchedResult","state","title","JobSearchBar","jobList","setJobList","useLocation","jobListComponent","job","allJob","setAllJob","AddJob","location","companyName","description","employerEmail","companyLink","postdate","jobForm","setJobForm","myJob","jobElement","ReactDOM","render","path","element","JobSearch","Register","PokemonSearch","PokemonDetails","document","getElementById"],"mappings":"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","file":"static/js/main.e84859aa.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\n\nexport default function() {\n// useParams()：在index.js中, 有Route path=.../:pokemonName,所以用来取这个pokemonName\n    const pokemonName = useParams().pokemonName;\n\n    function findPokemonDetails() {\n\n        axios.get('/api/pokemon/find/' + pokemonName)\n            .then(response => setPokemon(response.data))\n            .then(error => console.log(\"Could not find Pokemon\"));\n\n    }\n\n\n    const [pokemon, setPokemon] = useState(null);\n    // useEffect干啥的？\n    useEffect(findPokemonDetails, []);\n\n\n    const pokemonComponent = pokemon ? \n        (<><div>\n            Pokemon Name: {pokemon.name}\n        </div>\n        <div>\n            Pokemon Health: {pokemon.health} \n        </div></>) :\n        (<div> No Pokemon found </div>);\n\n    return (\n        <div>\n            {pokemonComponent}\n        </div>\n    )\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function PokemonSearchBar() {\n    const [allPokemon, setAllPokemon] = useState([]);\n\n    // response.data 用法\n    function findAllPokemon() {\n        axios.get('api/pokemon/findAll')\n            .then(response => {\n                setAllPokemon(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n    // 任何page\n    useEffect(findAllPokemon, []);\n    // 下面，当你click，进入\n    const pokemonListComponent = allPokemon.map(pokemon => {\n        return (<>\n        <p></p>\n        <Link to={\"pokemon/\" + pokemon.name}>{pokemon.name}</Link>\n        </>)\n    })\n\n    return (\n        <div>\n            <h1>These are all my Pokemon</h1>\n            {pokemonListComponent}\n        </div>\n    )\n}","import { useState } from 'react';\nimport axios, { Axios } from 'axios';\n\nfunction App() {\n  const [formInput, setFormInput] = useState('');\n  const [pokemon, setPokemon] = useState({\n    name: 'No pokemon selected', health: -1,\n  })\n  const [errorMsg, setError] = useState(null);\n  // 当我click，value in the input filed会被searched on the back end,\n  // 获得信息后，改变前端\n  function onSearchButtonClick() {\n    // const pokemon = axios.get('...')\n    // console.log(pokemon);\n    \n    if (!formInput) {\n      setError(\"You must type in a Pokemon name.\");\n      return;\n    }\n    // forminput是看输入的是啥小精灵 \n    axios.get('/api/pokemon/find/' + formInput)\n      .then(response => setPokemon(response.data))\n      .catch(error => setPokemon({\n        name: \"No pokemon found\",\n        health: null, \n      }));\n    console.log(\"hello, there\");\n\n    // doSomething();\n  }\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Pokemon\n      </button>\n      <div>\n        Pokemon Name: {pokemon.name}\n      </div>\n      <div>\n        Pokemon Health: {pokemon.health}\n      </div>\n\n    </div>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useNavigate } from 'react-router';\n\n\nexport default (props) => {\n\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState({\n        password: '',\n        username: '',\n    })\n\n    const [loggedInName, setLoggedInName] = useState('');\n\n    return (\n        <div>\n            <h3>Input Name and Password</h3>\n            <h5>Username:</h5>\n            <input value={userData.username} onChange={(e) => {\n                const username = e.target.value;\n                setUserData({\n                    ...userData,\n                    username: username\n                })\n            }}/>\n            <h5>Password:</h5>\n            <input value={userData.password} onChange={(e) => {\n                const password = e.target.value;\n                setUserData({\n                    ...userData,\n                    password: password\n                })\n            }} type='password' />\n            <button\n                onClick={() => {\n                    axios.post('/api/users', userData)\n                        .then(response => {\n                            navigate(\"/myPokemon\")\n                            console.log(response)\n                        })\n                        .catch(error => console.log(error));\n                }}\n            >Register New User</button>\n            <button\n                onClick={\n                    () => {\n                        axios.get('/api/users/whoIsLoggedIn')\n                            .then(response => setLoggedInName(response.data))\n                            .catch(error => console.log(error));\n                    }\n                }\n                >Who is logged in?</button>\n            {loggedInName && <div>{loggedInName}</div>}\n        </div>\n    );\n\n\n} ","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    // 如没有login，就来主页了\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}","import React from 'react';\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\n\n\nexport default function Logout(props) {\n    const navigate = useNavigate(); // back to home page\n    return (<button onClick={() => axios.post('/api/users/logout')\n    .then(() => navigate('/'))\n    .catch(console.error)\n  }>Logout</button>);\n}","import { useState } from 'react';\nimport axios, { Axios } from 'axios';\nimport { now } from 'mongoose';\nimport { useNavigate } from 'react-router';\n\n// 这个地方叫App有什么特殊含义吗？是不是home 的意思\nfunction App() {\n    const navigate = useNavigate();\n    const [formInput, setFormInput] = useState('');\n    const [searchedJob, setSearchedJob] = useState('');\n    const [searchedResult, setSearchedResult] = useState([]); \n    const [errorMsg, setError] = useState(null);\n\n    function onSearchButtonClick() {\n        if (!formInput) {\n            setError(\"You must type in a job title\");\n            return;\n        }\n        // 这里应该这么处理嘛？下面是原来我写的：\n        axios.get('/api/jobs/find/' + formInput)\n            .then(response => {\n                setSearchedResult(response.data)\n                navigate(\"/jobSearchResult\", { state: { searchedJob: searchedJob } })\n            })\n            .catch(error => setError(error));\n\n        console.log(\"成功跑了onSearchButtonClick函数\");\n    }\n\n    return (\n        <div>\n            {errorMsg}\n            <input type='text' value={formInput}\n                onChange={(e) => {\n                    setError(null);\n                    setFormInput(e.target.value)\n\n                }} />\n            <button onClick={onSearchButtonClick}>\n                Search Jobs\n            </button>\n            <div>\n                Searched Job Title: {searchedJob.title}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport default function JobSearchBar() {\n    const [jobList, setJobList] = useState([]);\n\n    let location = useLocation();\n    let searchedJob = location.state;\n    console.log(searchedJob);\n    // response.data 用法\n    function findSearchedJobs() {\n        axios.get('/api/jobs/find/' + {searchedJob})\n            .then(response => {\n                setJobList(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    // 任何page\n    useEffect(findSearchedJobs, []);\n    // 下面，当你click，进入\n    const jobListComponent = jobList.map(job => {\n        return (<>\n        <p></p>\n        <Link to={\"/api/jobs/\" + job.title}>{job.title}</Link>\n        </>)\n    });\n\n    return (\n        <div>\n            <h1>These are all the searched jobs: </h1>\n            {jobListComponent}\n        </div>\n    )\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n\nexport default function JobSearchBar() {\n    const [allJob, setAllJob] = useState([]);\n\n    function findAllJob() {\n        axios.get('api/jobs/findAll/')\n            .then(response => {\n                setAllJob(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    console.log('this is all jobs:' + allJob);\n    useEffect(findAllJob, []);\n\n    const jobListComponent = allJob.map(job => {\n        return (<>\n        <p>{job.title}</p>\n        {/* <Link to={\"pokemon/\" + pokemon.name}>{pokemon.name}</Link> */}\n        </>)\n    })\n\n    return (\n        <div>\n            <h1>These are all my Pokemon</h1>\n            {jobListComponent}\n        </div>\n    )\n}","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n    const [myJob, setMyJob] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n\n    // function getMyPokemon() {\n    //     axios.get('/api/job/myjob')\n    //         .then(response => setMyPokemon(response.data))\n    //         .catch(error => console.log(error));\n    // }\n\n\n    // useEffect(getMyPokemon, []);\n\n\n    const jobElement = [];\n    for (let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Title:</h5>\n            <input value={jobForm.title}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    title: e.target.value\n                })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    location: e.target.value\n                })} ></input>\n            <h5>Company Name:</h5>\n            <input value={jobForm.companyName}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyName: e.target.value\n                })} ></input>\n\n            <h5>Description:</h5>\n            <input value={jobForm.description}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    description: e.target.value\n                })} ></input>\n\n            <h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    employerEmail: e.target.value\n                })} ></input>\n\n            <h5>Company Link:</h5>\n            <input value={jobForm.companyLink}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyLink: e.target.value\n                })} ></input>\n\n            <h5> Post Date:</h5>\n            <input value={jobForm.postdate}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    postdate: e.target.value\n                })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/createJob/', jobForm)\n                    .then(response => {\n                        // getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport PokemonDetails from './PokemonDetails';\nimport PokemonList from './PokemonList';\nimport PokemonSearch from './PokemonSearch';\nimport reportWebVitals from './reportWebVitals';\nimport Register from './Register';\nimport PokemonTracker from './PokemonTracker';\nimport Logout from './Logout';\nimport JobSearch from './JobSearch';\nimport JobList from './JobList';\nimport AllJobs from './AllJobs';\nimport AddJob from './AddJob';\n\nReactDOM.render(\n  <Router>\n    <Logout />\n    <Routes>\n      <Route path=\"/add\" element={<AddJob />} /> \n      <Route path=\"/alljobs\" element={<AllJobs />} /> \n      <Route path=\"/jobSearch\" element={<JobSearch />} /> \n      <Route path=\"/jobSearchResult\" element={<JobList />} /> \n      <Route path=\"/\" element={<Register />} />\n      <Route path=\"/myPokemon\" element={<PokemonTracker />} />\n      <Route path=\"/list\" element={<PokemonList />} />\n      <Route path=\"/pokemonSearch/:searchQuery\" element={<PokemonSearch />} />\n      <Route path=\"/pokemon/:pokemonName\" element={<PokemonDetails />} />\n    </Routes>\n  </Router>\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}