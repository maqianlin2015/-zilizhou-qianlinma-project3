[{"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/src/PokemonTracker.jsx":"1","/Users/michelle_ma/Desktop/project3/src/index.js":"2","/Users/michelle_ma/Desktop/project3/src/reportWebVitals.js":"3","/Users/michelle_ma/Desktop/project3/src/PokemonSearch.js":"4","/Users/michelle_ma/Desktop/project3/src/PokemonDetails.jsx":"5","/Users/michelle_ma/Desktop/project3/src/PokemonTracker.jsx":"6","/Users/michelle_ma/Desktop/project3/src/PokemonList.jsx":"7","/Users/michelle_ma/Desktop/project3/src/Register.jsx":"8","/Users/michelle_ma/Desktop/project3/src/Logout.jsx":"9","/Users/michelle_ma/Desktop/project3/src/JobSearch.js":"10","/Users/michelle_ma/Desktop/project3/src/JobList.jsx":"11","/Users/michelle_ma/Desktop/project3/src/AllJobs.jsx":"12","/Users/michelle_ma/Desktop/project3/src/AddJob.jsx":"13","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/index.js":"14","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonSearch.js":"15","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/reportWebVitals.js":"16","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearch.js":"17","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonList.jsx":"18","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonDetails.jsx":"19","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/Logout.jsx":"20","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/Register.jsx":"21","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AllJobs.jsx":"22","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonTracker.jsx":"23","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AddJob.jsx":"24","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobDetails.jsx":"25","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearchResult.jsx":"26"},{"size":2535,"mtime":1639395040840,"results":"27","hashOfConfig":"28"},{"size":1488,"mtime":1639441977942,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1639247369657,"results":"31","hashOfConfig":"30"},{"size":1349,"mtime":1639297663718,"results":"32","hashOfConfig":"30"},{"size":958,"mtime":1639400146508,"results":"33","hashOfConfig":"30"},{"size":2535,"mtime":1639395040840,"results":"34","hashOfConfig":"30"},{"size":875,"mtime":1639299197916,"results":"35","hashOfConfig":"30"},{"size":1834,"mtime":1639441058892,"results":"36","hashOfConfig":"30"},{"size":344,"mtime":1639394913114,"results":"37","hashOfConfig":"30"},{"size":1539,"mtime":1639445076968,"results":"38","hashOfConfig":"30"},{"size":1020,"mtime":1639440730379,"results":"39","hashOfConfig":"30"},{"size":821,"mtime":1639441316904,"results":"40","hashOfConfig":"30"},{"size":3252,"mtime":1639445282746,"results":"41","hashOfConfig":"30"},{"size":1668,"mtime":1639616716566,"results":"42","hashOfConfig":"43"},{"size":1196,"mtime":1639543950308,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1639247369657,"results":"45","hashOfConfig":"43"},{"size":1350,"mtime":1639613908987,"results":"46","hashOfConfig":"43"},{"size":875,"mtime":1639299197916,"results":"47","hashOfConfig":"43"},{"size":1004,"mtime":1639530410694,"results":"48","hashOfConfig":"43"},{"size":344,"mtime":1639394913114,"results":"49","hashOfConfig":"43"},{"size":1484,"mtime":1639616034041,"results":"50","hashOfConfig":"43"},{"size":930,"mtime":1639481470349,"results":"51","hashOfConfig":"43"},{"size":2535,"mtime":1639395040840,"results":"52","hashOfConfig":"43"},{"size":3136,"mtime":1639479169259,"results":"53","hashOfConfig":"43"},{"size":1296,"mtime":1639537207134,"results":"54","hashOfConfig":"43"},{"size":1089,"mtime":1639615589479,"results":"55","hashOfConfig":"43"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"ulwhub",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p65yfa",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vhhgx",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"95"},"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/src/PokemonTracker.jsx",["124"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    // 如没有login，就来主页了\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}","/Users/michelle_ma/Desktop/project3/src/index.js",[],"/Users/michelle_ma/Desktop/project3/src/reportWebVitals.js",[],["125","126"],"/Users/michelle_ma/Desktop/project3/src/PokemonSearch.js",["127"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\n\nfunction App() {\n  const [formInput, setFormInput] = useState('');\n  const [pokemon, setPokemon] = useState({\n    name: 'No pokemon selected', health: -1,\n  })\n  const [errorMsg, setError] = useState(null);\n  // 当我click，value in the input filed会被searched on the back end,\n  // 获得信息后，改变前端\n  function onSearchButtonClick() {\n    // const pokemon = axios.get('...')\n    // console.log(pokemon);\n    \n    if (!formInput) {\n      setError(\"You must type in a Pokemon name.\");\n      return;\n    }\n    // forminput是看输入的是啥小精灵 \n    axios.get('/api/pokemon/find/' + formInput)\n      .then(response => setPokemon(response.data))\n      .catch(error => setPokemon({\n        name: \"No pokemon found\",\n        health: null, \n      }));\n    console.log(\"hello, there\");\n\n    // doSomething();\n  }\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Pokemon\n      </button>\n      <div>\n        Pokemon Name: {pokemon.name}\n      </div>\n      <div>\n        Pokemon Health: {pokemon.health}\n      </div>\n\n    </div>\n \n  );\n}\n\nexport default App;\n","/Users/michelle_ma/Desktop/project3/src/PokemonDetails.jsx",["128","129"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\n\nexport default function() {\n// useParams()：在index.js中, 有Route path=.../:pokemonName,所以用来取这个pokemonName\n    const pokemonName = useParams().pokemonName;\n\n    function findPokemonDetails() {\n\n        axios.get('/api/pokemon/find/' + pokemonName)\n            .then(response => setPokemon(response.data))\n            .then(error => console.log(\"Could not find Pokemon\"));\n\n    }\n\n\n    const [pokemon, setPokemon] = useState(null);\n    // useEffect干啥的？\n    useEffect(findPokemonDetails, []);\n\n\n    const pokemonComponent = pokemon ? \n        (<><div>\n            Pokemon Name: {pokemon.name}\n        </div>\n        <div>\n            Pokemon Health: {pokemon.health} \n        </div></>) :\n        (<div> No Pokemon found </div>);\n\n    return (\n        <div>\n            {pokemonComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/project3/src/PokemonTracker.jsx",["130"],"/Users/michelle_ma/Desktop/project3/src/PokemonList.jsx",[],"/Users/michelle_ma/Desktop/project3/src/Register.jsx",["131"],"import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useNavigate } from 'react-router';\n\n\nexport default (props) => {\n\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState({\n        password: '',\n        username: '',\n    })\n\n    const [loggedInName, setLoggedInName] = useState('');\n\n    return (\n        <div>\n            <h3>Input Name and Password</h3>\n            <h5>Username:</h5>\n            <input value={userData.username} onChange={(e) => {\n                const username = e.target.value;\n                setUserData({\n                    ...userData,\n                    username: username\n                })\n            }}/>\n            <h5>Password:</h5>\n            <input value={userData.password} onChange={(e) => {\n                const password = e.target.value;\n                setUserData({\n                    ...userData,\n                    password: password\n                })\n            }} type='password' />\n            <button\n                onClick={() => {\n                    axios.post('/api/users', userData)\n                        .then(response => {\n                            navigate(\"/myPokemon\")\n                            console.log(response)\n                        })\n                        .catch(error => console.log(error));\n                }}\n            >Register New User</button>\n            <button\n                onClick={\n                    () => {\n                        axios.get('/api/users/whoIsLoggedIn')\n                            .then(response => setLoggedInName(response.data))\n                            .catch(error => console.log(error));\n                    }\n                }\n                >Who is logged in?</button>\n            {loggedInName && <div>{loggedInName}</div>}\n        </div>\n    );\n\n\n} ","/Users/michelle_ma/Desktop/project3/src/Logout.jsx",[],"/Users/michelle_ma/Desktop/project3/src/JobSearch.js",["132","133","134","135"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\nimport { now } from 'mongoose';\nimport { useNavigate } from 'react-router';\n\n// 这个地方叫App有什么特殊含义吗？是不是home 的意思\nfunction App() {\n    const navigate = useNavigate();\n    const [formInput, setFormInput] = useState('');\n    const [searchedJob, setSearchedJob] = useState('');\n    const [searchedResult, setSearchedResult] = useState([]); \n    const [errorMsg, setError] = useState(null);\n\n    function onSearchButtonClick() {\n        if (!formInput) {\n            setError(\"You must type in a job title\");\n            return;\n        }\n        // 这里应该这么处理嘛？下面是原来我写的：\n        axios.get('/api/jobs/find/' + formInput)\n            .then(response => {\n                setSearchedResult(response.data)\n                navigate(\"/jobSearchResult\", { state: { searchedJob: searchedJob } })\n            })\n            .catch(error => setError(error));\n\n        console.log(\"成功跑了onSearchButtonClick函数\");\n    }\n\n    return (\n        <div>\n            {errorMsg}\n            <input type='text' value={formInput}\n                onChange={(e) => {\n                    setError(null);\n                    setFormInput(e.target.value)\n\n                }} />\n            <button onClick={onSearchButtonClick}>\n                Search Jobs\n            </button>\n            <div>\n                Searched Job Title: {searchedJob.title}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/michelle_ma/Desktop/project3/src/JobList.jsx",["136"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport default function JobSearchBar() {\n    const [jobList, setJobList] = useState([]);\n\n    let location = useLocation();\n    let searchedJob = location.state;\n    console.log(searchedJob);\n    // response.data 用法\n    function findSearchedJobs() {\n        axios.get('/api/jobs/find/' + {searchedJob})\n            .then(response => {\n                setJobList(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    // 任何page\n    useEffect(findSearchedJobs, []);\n    // 下面，当你click，进入\n    const jobListComponent = jobList.map(job => {\n        return (<>\n        <p></p>\n        <Link to={\"/api/jobs/\" + job.title}>{job.title}</Link>\n        </>)\n    });\n\n    return (\n        <div>\n            <h1>These are all the searched jobs: </h1>\n            {jobListComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/project3/src/AllJobs.jsx",[],"/Users/michelle_ma/Desktop/project3/src/AddJob.jsx",["137","138","139"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n    const [myJob, setMyJob] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n\n    // function getMyPokemon() {\n    //     axios.get('/api/job/myjob')\n    //         .then(response => setMyPokemon(response.data))\n    //         .catch(error => console.log(error));\n    // }\n\n\n    // useEffect(getMyPokemon, []);\n\n\n    const jobElement = [];\n    for (let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Title:</h5>\n            <input value={jobForm.title}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    title: e.target.value\n                })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    location: e.target.value\n                })} ></input>\n            <h5>Company Name:</h5>\n            <input value={jobForm.companyName}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyName: e.target.value\n                })} ></input>\n\n            <h5>Description:</h5>\n            <input value={jobForm.description}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    description: e.target.value\n                })} ></input>\n\n            <h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    employerEmail: e.target.value\n                })} ></input>\n\n            <h5>Company Link:</h5>\n            <input value={jobForm.companyLink}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyLink: e.target.value\n                })} ></input>\n\n            <h5> Post Date:</h5>\n            <input value={jobForm.postdate}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    postdate: e.target.value\n                })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/createJob/', jobForm)\n                    .then(response => {\n                        // getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n\n\n}","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/index.js",["140"],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonSearch.js",["141"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\nimport { useNavigate } from 'react-router';\n\nfunction App() {\n\n  const navigate = useNavigate();\n  const [formInput, setFormInput] = useState('');\n  const [pokemon, setPokemon] = useState({\n    name: 'No pokemon selected', health: -1,\n  })\n  const [errorMsg, setError] = useState(null);\n\n  // useEffect(onSearchButtonClick, []);\n\n\n  function onSearchButtonClick() {    \n    if (!formInput) {\n      setError(\"You must type in a Pokemon name.\");\n      return;\n    }\n    axios.get('/api/pokemon/find/findPkmByName/' + formInput)\n      .then(response => {setPokemon(response.data)\n        navigate(\"/alljobs\")\n      })\n      .catch(error => console.log(\"Could not find Pkm\"));\n  }\n\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Pokemon\n      </button>\n\n      <div>\n        Pokemon Name: {pokemon.name}\n      </div>\n      <div>\n        Pokemon Health: {pokemon.health}\n      </div>\n\n    </div>\n \n  );\n}\n\nexport default App;\n",["142","143"],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/reportWebVitals.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearch.js",["144","145","146","147"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\nimport { useNavigate } from 'react-router';\n\nfunction App() {\n  const navigate = useNavigate();\n  const [formInput, setFormInput] = useState('');\n  const [job, setJob] = useState({\n    title: 'No job selected',\n  })\n  const [errorMsg, setError] = useState(null);\n\n  // useEffect(onSearchButtonClick, []);\n\n  function onSearchButtonClick() {    \n    if (!formInput) {\n      setError(\"You must type in a Job name.\");\n      return;\n    } else {\n        navigate(\"/jobSearch/\" + formInput);\n        // 上面这里其实不s是all job， 应该是一个特殊制定的path，用到了form input的输入 \n        // alljob只是一个引子，开始做jobsearchresult\n    }\n    // localhost:3000/jobSearch/api/jobs/find/findByTitle/seller\n    // axios.get('/api/pokemon/find/findPkmByName/' + formInput)\n    //   .then(response => {setPokemon(response.data)\n    //     navigate(\"/alljobs\")\n    //   })\n    //   .catch(error => console.log(\"Could not find Pkm\"));\n\n  }\n\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Job\n      </button>\n\n    </div>\n \n  );\n}\n\nexport default App;\n","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonList.jsx",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonDetails.jsx",["148","149","150","151"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport PokemonSearchBar from './PokemonList';\n\n\nexport default function() {\n// useParams()：在index.js中, 有Route path=.../:pokemonName,所以用来取这个pokemonName\n    const pokemonName = useParams().pokemonName;\n\n    function findPokemonDetails() {\n        axios.get('api/pokemon/find/' + pokemonName)\n            .then(response => setPokemon(response.data))\n            .then(error => console.log(\"Could not find Pokemon\"));\n    }\n\nconsole.log(\"pkm is:\" + pokemon);\n    const [pokemon, setPokemon] = useState(null);\n    useEffect(findPokemonDetails, []);\n\n    const pokemonComponent = pokemon ? \n        (<><div>\n            Pokemon Name: {pokemon.name}\n        </div>\n        <div>\n            Pokemon Health: {pokemon.health} \n        </div></>) :\n        (<div> No Pokemon found </div>);\n\n    return (\n        <div>\n            {pokemonComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/Logout.jsx",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/Register.jsx",["152","153","154"],"import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useNavigate } from 'react-router';\n\n\nexport default (props) => {\n    const navigate = useNavigate();\n    const [userData, setUserData] = useState({\n        password: '',\n        username: '',\n    })\n\n    const [loggedInName, setLoggedInName] = useState('');\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <h5>Username:</h5>\n            <input value={userData.username} onChange={(e) => {\n                const username = e.target.value;\n                setUserData({\n                    ...userData,\n                    username: username\n                })\n            }}/>\n            <h5>Password:</h5>\n            <input value={userData.password} onChange={(e) => {\n                const password = e.target.value;\n                setUserData({\n                    ...userData,\n                    password: password\n                })\n            }} type='password' />\n            <button\n                onClick={() => {\n\n                    axios.post('/api/users/', userData)\n                        .then(response => {\n                            navigate(\"/jobSearch\")\n                            console.log(response)\n                        })\n                        .catch(error => console.log(error));\n                }}\n            >Register New User</button>\n\n        </div>\n    );\n// 如果没注册过，就注册了并跳转主页，如果注册过了,error提示\n} ","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AllJobs.jsx",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/PokemonTracker.jsx",["155"],"/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/AddJob.jsx",["156"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nconst { v4: uuid } = require('uuid');\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        id: uuid(),\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n\n    const [myJob, setMyJob] = useState([])\n\n    function getMyJob() {\n        axios.get('/api/jobs/findAll')\n            .then(response => setMyJob(response.data))\n            .catch(error => console.log(error));\n    }\n \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n\n    useEffect(checkLogin, []);\n\n    useEffect(getMyJob, []);\n\n\n\n    const jobElement = [];\n    for (let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Title:</h5>\n            <input value={jobForm.title}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    title: e.target.value\n                })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    location: e.target.value\n                })} ></input>\n            <h5>Company Name:</h5>\n            <input value={jobForm.companyName}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyName: e.target.value\n                })} ></input>\n\n            <h5>Description:</h5>\n            <input value={jobForm.description}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    description: e.target.value\n                })} ></input>\n\n            <h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    employerEmail: e.target.value\n                })} ></input>\n\n            <h5>Company Link:</h5>\n            <input value={jobForm.companyLink}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyLink: e.target.value\n                })} ></input>\n\n            <h5> Post Date:</h5>\n            <input value={jobForm.postdate}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    postdate: e.target.value\n                })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/create', jobForm)\n                    .then(response => {\n                        getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error( error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n}\n","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobDetails.jsx",["157","158"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\nexport default function () {\n    const jobId = useParams().jobId;\n    const [job, setJob] = useState(null);\n\n    function findJobDetails() {\n        console.log(\"进入findJobDetail函数\");\n        axios.get('/api/jobs/find/findById/' + jobId)\n            .then(response => setJob(response.data))\n            .catch(error => console.log(\"Could not find Job\"));\n    }\n\n    useEffect(findJobDetails, []);\n    console.log(job); // 所以job这里是一个{} of []\n\n    const jobDetailComponent = job ? \n    \n    (\n        job.map(j => {\n            return (<>\n                <div> Job Title: {j.title} </div>\n                <div> Company: {j.companyName} </div>     \n                <div> Location: {j.location} </div>     \n                <div> Description: {j.description} </div>     \n                <div> Emploter Email: {j.employerEmail} </div>     \n                <div> Company Link: {j.companyLink} </div>     \n                <div> Post Date: {j.postdate} </div>     \n        \n\n            </>)\n        }) \n    ) :\n        (<div> No Job found </div>);\n    return (\n        <div>\n            <h1>Details: </h1>\n            {jobDetailComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/NEU/Web/Project/-zilizhou-qianlinma-project3/src/JobSearchResult.jsx",["159"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nexport default function JobSearchResult() {\n    const [selectedJob, setSelectedJob] = useState([]);\n    const jobSearchQuery = useParams().jobSearchQuery;\n\n    function findSelectedJob() {\n        axios.get('/api/jobs/find/findByTitle/' + jobSearchQuery)\n            .then(response => {\n                setSelectedJob(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    console.log('this is selected jobs:');\n    console.log(selectedJob);\n    useEffect(findSelectedJob, []);\n\n    const jobListComponent = selectedJob.map(job => {\n        return (<>\n            <p>\n                {/* 别忘了job前面加/ */}\n                <Link to={\"/job/\" + job.id}>{job.title} - {job.location} - {job.companyName}</Link>\n            </p>\n        </>)\n    })\n\n    return (\n        <div>\n            <h1>These are search result the jobs: </h1>\n            {jobListComponent}\n        </div>\n    )\n}",{"ruleId":"160","severity":1,"message":"161","line":37,"column":27,"nodeType":"162","endLine":37,"endColumn":29,"suggestions":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":38,"endColumn":2},{"ruleId":"160","severity":1,"message":"175","line":21,"column":35,"nodeType":"162","endLine":21,"endColumn":37,"suggestions":"176"},{"ruleId":"160","severity":1,"message":"161","line":37,"column":27,"nodeType":"162","endLine":37,"endColumn":29,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":6,"column":1,"nodeType":"174","endLine":60,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":22},{"ruleId":"168","severity":1,"message":"179","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":13},{"ruleId":"168","severity":1,"message":"180","line":10,"column":25,"nodeType":"170","messageId":"171","endLine":10,"endColumn":39},{"ruleId":"168","severity":1,"message":"181","line":11,"column":12,"nodeType":"170","messageId":"171","endLine":11,"endColumn":26},{"ruleId":"160","severity":1,"message":"182","line":22,"column":33,"nodeType":"162","endLine":22,"endColumn":35,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"184","line":2,"column":27,"nodeType":"170","messageId":"171","endLine":2,"endColumn":36},{"ruleId":"168","severity":1,"message":"185","line":6,"column":11,"nodeType":"170","messageId":"171","endLine":6,"endColumn":19},{"ruleId":"168","severity":1,"message":"186","line":16,"column":19,"nodeType":"170","messageId":"171","endLine":16,"endColumn":27},{"ruleId":"168","severity":1,"message":"187","line":13,"column":8,"nodeType":"170","messageId":"171","endLine":13,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":22},{"ruleId":"164","replacedBy":"188"},{"ruleId":"166","replacedBy":"189"},{"ruleId":"168","severity":1,"message":"190","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":22},{"ruleId":"168","severity":1,"message":"191","line":8,"column":10,"nodeType":"170","messageId":"171","endLine":8,"endColumn":13},{"ruleId":"168","severity":1,"message":"192","line":8,"column":15,"nodeType":"170","messageId":"171","endLine":8,"endColumn":21},{"ruleId":"168","severity":1,"message":"193","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":7,"column":1,"nodeType":"174","endLine":35,"endColumn":2},{"ruleId":"194","severity":1,"message":"195","line":17,"column":25,"nodeType":"170","messageId":"196","endLine":17,"endColumn":32},{"ruleId":"160","severity":1,"message":"175","line":19,"column":35,"nodeType":"162","endLine":19,"endColumn":37,"suggestions":"197"},{"ruleId":"172","severity":1,"message":"178","line":6,"column":1,"nodeType":"174","endLine":49,"endColumn":2},{"ruleId":"168","severity":1,"message":"198","line":13,"column":12,"nodeType":"170","messageId":"171","endLine":13,"endColumn":24},{"ruleId":"168","severity":1,"message":"199","line":13,"column":26,"nodeType":"170","messageId":"171","endLine":13,"endColumn":41},{"ruleId":"160","severity":1,"message":"161","line":37,"column":27,"nodeType":"162","endLine":37,"endColumn":29,"suggestions":"200"},{"ruleId":"160","severity":1,"message":"161","line":34,"column":27,"nodeType":"162","endLine":34,"endColumn":29,"suggestions":"201"},{"ruleId":"172","severity":1,"message":"173","line":5,"column":1,"nodeType":"174","endLine":43,"endColumn":2},{"ruleId":"160","severity":1,"message":"202","line":16,"column":31,"nodeType":"162","endLine":16,"endColumn":33,"suggestions":"203"},{"ruleId":"160","severity":1,"message":"204","line":20,"column":32,"nodeType":"162","endLine":20,"endColumn":34,"suggestions":"205"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["206"],"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'pokemonName'. Either include it or remove the dependency array.",["209"],["210"],"Assign arrow function to a variable before exporting as module default","'now' is defined but never used.","'setSearchedJob' is assigned a value but never used.","'searchedResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchedJob'. Either include it or remove the dependency array.",["211"],"'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'setMyJob' is assigned a value but never used.","'AllJobs' is defined but never used.",["207"],["208"],"'axios' is defined but never used.","'job' is assigned a value but never used.","'setJob' is assigned a value but never used.","'PokemonSearchBar' is defined but never used.","no-use-before-define","'pokemon' was used before it was defined.","usedBeforeDefined",["212"],"'loggedInName' is assigned a value but never used.","'setLoggedInName' is assigned a value but never used.",["213"],["214"],"React Hook useEffect has a missing dependency: 'jobId'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'jobSearchQuery'. Either include it or remove the dependency array.",["216"],{"desc":"217","fix":"218"},"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"217","fix":"221"},{"desc":"222","fix":"223"},{"desc":"219","fix":"224"},{"desc":"217","fix":"225"},{"desc":"217","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [navigate]",{"range":"231","text":"232"},"Update the dependencies array to be: [pokemonName]",{"range":"233","text":"234"},{"range":"235","text":"232"},"Update the dependencies array to be: [searchedJob]",{"range":"236","text":"237"},{"range":"238","text":"234"},{"range":"239","text":"232"},{"range":"240","text":"232"},"Update the dependencies array to be: [jobId]",{"range":"241","text":"242"},"Update the dependencies array to be: [jobSearchQuery]",{"range":"243","text":"244"},[1134,1136],"[navigate]",[605,607],"[pokemonName]",[1134,1136],[665,667],"[searchedJob]",[660,662],[1134,1136],[894,896],[513,515],"[jobId]",[673,675],"[jobSearchQuery]"]