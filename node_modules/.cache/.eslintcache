[{"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/src/PokemonTracker.jsx":"1","/Users/michelle_ma/Desktop/project3/src/index.js":"2","/Users/michelle_ma/Desktop/project3/src/reportWebVitals.js":"3","/Users/michelle_ma/Desktop/project3/src/PokemonSearch.js":"4","/Users/michelle_ma/Desktop/project3/src/PokemonDetails.jsx":"5","/Users/michelle_ma/Desktop/project3/src/PokemonTracker.jsx":"6","/Users/michelle_ma/Desktop/project3/src/PokemonList.jsx":"7","/Users/michelle_ma/Desktop/project3/src/Register.jsx":"8","/Users/michelle_ma/Desktop/project3/src/Logout.jsx":"9","/Users/michelle_ma/Desktop/project3/src/JobSearch.js":"10","/Users/michelle_ma/Desktop/project3/src/JobList.jsx":"11","/Users/michelle_ma/Desktop/project3/src/AllJobs.jsx":"12","/Users/michelle_ma/Desktop/project3/src/AddJob.jsx":"13"},{"size":2535,"mtime":1639395040840,"results":"14","hashOfConfig":"15"},{"size":1488,"mtime":1639441977942,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1639247369657,"results":"18","hashOfConfig":"17"},{"size":1349,"mtime":1639297663718,"results":"19","hashOfConfig":"17"},{"size":958,"mtime":1639400146508,"results":"20","hashOfConfig":"17"},{"size":2535,"mtime":1639395040840,"results":"21","hashOfConfig":"17"},{"size":875,"mtime":1639299197916,"results":"22","hashOfConfig":"17"},{"size":1834,"mtime":1639441058892,"results":"23","hashOfConfig":"17"},{"size":344,"mtime":1639394913114,"results":"24","hashOfConfig":"17"},{"size":1539,"mtime":1639445076968,"results":"25","hashOfConfig":"17"},{"size":1020,"mtime":1639440730379,"results":"26","hashOfConfig":"17"},{"size":821,"mtime":1639441316904,"results":"27","hashOfConfig":"17"},{"size":3252,"mtime":1639445282746,"results":"28","hashOfConfig":"17"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"ulwhub",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p65yfa",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/michelle_ma/Desktop/hunter_fall2021_cs5610_mod3/src/PokemonTracker.jsx",["63"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function PokemonTracker(props) {\n    const navigate = useNavigate();\n    const [pokemonForm, setPokemonForm] = useState({\n        name: '',\n        type: '',\n        health: '',\n    });\n    const [myPokemon, setMyPokemon] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n     \n    function getMyPokemon() {\n        axios.get('/api/pokemon/myPokemon')\n            .then(response => setMyPokemon(response.data))\n            .catch(error => console.log(error));\n        // console.log(\"aynsc\");\n        // esponse.datashi yi obj\n\n    }\n    \n\n    function checkLogin() {\n        axios.get('/api/users/whoIsLoggedIn')\n            .then(() => console.log(\"Success\"))\n            .catch(() => navigate('/'))\n    }\n    // 如没有login，就来主页了\n    useEffect(checkLogin, []);\n\n    useEffect(getMyPokemon, []);\n\n\n    const pokemonElement = [];\n    for(let pokemon of myPokemon) {\n        pokemonElement.push(<div>{pokemon.name} - {pokemon.health} - {pokemon.type}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Pokemon Name:</h5>\n            <input value={pokemonForm.name} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                name: e.target.value\n            })} ></input>\n            <h5>Type:</h5>\n            <input value={pokemonForm.type} \n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                type: e.target.value\n            })} ></input>\n            <h5>Health:</h5>\n            <input value={pokemonForm.health} type=\"number\"\n            onChange={e => setPokemonForm({\n                ...pokemonForm,\n                health: e.target.value\n            })} ></input>\n            <button onClick={\n                () => axios.post('/api/pokemon/create', pokemonForm)\n                    .then(response => {\n                        getMyPokemon()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {pokemonElement}\n        </div>\n    )\n\n\n}","/Users/michelle_ma/Desktop/project3/src/index.js",[],"/Users/michelle_ma/Desktop/project3/src/reportWebVitals.js",[],["64","65"],"/Users/michelle_ma/Desktop/project3/src/PokemonSearch.js",["66"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\n\nfunction App() {\n  const [formInput, setFormInput] = useState('');\n  const [pokemon, setPokemon] = useState({\n    name: 'No pokemon selected', health: -1,\n  })\n  const [errorMsg, setError] = useState(null);\n  // 当我click，value in the input filed会被searched on the back end,\n  // 获得信息后，改变前端\n  function onSearchButtonClick() {\n    // const pokemon = axios.get('...')\n    // console.log(pokemon);\n    \n    if (!formInput) {\n      setError(\"You must type in a Pokemon name.\");\n      return;\n    }\n    // forminput是看输入的是啥小精灵 \n    axios.get('/api/pokemon/find/' + formInput)\n      .then(response => setPokemon(response.data))\n      .catch(error => setPokemon({\n        name: \"No pokemon found\",\n        health: null, \n      }));\n    console.log(\"hello, there\");\n\n    // doSomething();\n  }\n\n  return (\n    <div>\n      {errorMsg}\n      <input type='text' value={formInput}\n      onChange={(e) => {\n        setError(null);\n        setFormInput(e.target.value)\n      \n      }} />\n      <button onClick={onSearchButtonClick}>\n        Search for Pokemon\n      </button>\n      <div>\n        Pokemon Name: {pokemon.name}\n      </div>\n      <div>\n        Pokemon Health: {pokemon.health}\n      </div>\n\n    </div>\n \n  );\n}\n\nexport default App;\n","/Users/michelle_ma/Desktop/project3/src/PokemonDetails.jsx",["67","68"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\n\nexport default function() {\n// useParams()：在index.js中, 有Route path=.../:pokemonName,所以用来取这个pokemonName\n    const pokemonName = useParams().pokemonName;\n\n    function findPokemonDetails() {\n\n        axios.get('/api/pokemon/find/' + pokemonName)\n            .then(response => setPokemon(response.data))\n            .then(error => console.log(\"Could not find Pokemon\"));\n\n    }\n\n\n    const [pokemon, setPokemon] = useState(null);\n    // useEffect干啥的？\n    useEffect(findPokemonDetails, []);\n\n\n    const pokemonComponent = pokemon ? \n        (<><div>\n            Pokemon Name: {pokemon.name}\n        </div>\n        <div>\n            Pokemon Health: {pokemon.health} \n        </div></>) :\n        (<div> No Pokemon found </div>);\n\n    return (\n        <div>\n            {pokemonComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/project3/src/PokemonTracker.jsx",["69"],"/Users/michelle_ma/Desktop/project3/src/PokemonList.jsx",[],"/Users/michelle_ma/Desktop/project3/src/Register.jsx",["70"],"import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useNavigate } from 'react-router';\n\n\nexport default (props) => {\n\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState({\n        password: '',\n        username: '',\n    })\n\n    const [loggedInName, setLoggedInName] = useState('');\n\n    return (\n        <div>\n            <h3>Input Name and Password</h3>\n            <h5>Username:</h5>\n            <input value={userData.username} onChange={(e) => {\n                const username = e.target.value;\n                setUserData({\n                    ...userData,\n                    username: username\n                })\n            }}/>\n            <h5>Password:</h5>\n            <input value={userData.password} onChange={(e) => {\n                const password = e.target.value;\n                setUserData({\n                    ...userData,\n                    password: password\n                })\n            }} type='password' />\n            <button\n                onClick={() => {\n                    axios.post('/api/users', userData)\n                        .then(response => {\n                            navigate(\"/myPokemon\")\n                            console.log(response)\n                        })\n                        .catch(error => console.log(error));\n                }}\n            >Register New User</button>\n            <button\n                onClick={\n                    () => {\n                        axios.get('/api/users/whoIsLoggedIn')\n                            .then(response => setLoggedInName(response.data))\n                            .catch(error => console.log(error));\n                    }\n                }\n                >Who is logged in?</button>\n            {loggedInName && <div>{loggedInName}</div>}\n        </div>\n    );\n\n\n} ","/Users/michelle_ma/Desktop/project3/src/Logout.jsx",[],"/Users/michelle_ma/Desktop/project3/src/JobSearch.js",["71","72","73","74"],"import { useState } from 'react';\nimport axios, { Axios } from 'axios';\nimport { now } from 'mongoose';\nimport { useNavigate } from 'react-router';\n\n// 这个地方叫App有什么特殊含义吗？是不是home 的意思\nfunction App() {\n    const navigate = useNavigate();\n    const [formInput, setFormInput] = useState('');\n    const [searchedJob, setSearchedJob] = useState('');\n    const [searchedResult, setSearchedResult] = useState([]); \n    const [errorMsg, setError] = useState(null);\n\n    function onSearchButtonClick() {\n        if (!formInput) {\n            setError(\"You must type in a job title\");\n            return;\n        }\n        // 这里应该这么处理嘛？下面是原来我写的：\n        axios.get('/api/jobs/find/' + formInput)\n            .then(response => {\n                setSearchedResult(response.data)\n                navigate(\"/jobSearchResult\", { state: { searchedJob: searchedJob } })\n            })\n            .catch(error => setError(error));\n\n        console.log(\"成功跑了onSearchButtonClick函数\");\n    }\n\n    return (\n        <div>\n            {errorMsg}\n            <input type='text' value={formInput}\n                onChange={(e) => {\n                    setError(null);\n                    setFormInput(e.target.value)\n\n                }} />\n            <button onClick={onSearchButtonClick}>\n                Search Jobs\n            </button>\n            <div>\n                Searched Job Title: {searchedJob.title}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/michelle_ma/Desktop/project3/src/JobList.jsx",["75"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport default function JobSearchBar() {\n    const [jobList, setJobList] = useState([]);\n\n    let location = useLocation();\n    let searchedJob = location.state;\n    console.log(searchedJob);\n    // response.data 用法\n    function findSearchedJobs() {\n        axios.get('/api/jobs/find/' + {searchedJob})\n            .then(response => {\n                setJobList(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    // 任何page\n    useEffect(findSearchedJobs, []);\n    // 下面，当你click，进入\n    const jobListComponent = jobList.map(job => {\n        return (<>\n        <p></p>\n        <Link to={\"/api/jobs/\" + job.title}>{job.title}</Link>\n        </>)\n    });\n\n    return (\n        <div>\n            <h1>These are all the searched jobs: </h1>\n            {jobListComponent}\n        </div>\n    )\n}","/Users/michelle_ma/Desktop/project3/src/AllJobs.jsx",[],"/Users/michelle_ma/Desktop/project3/src/AddJob.jsx",["76","77","78"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\n\nexport default function AddJob(props) {\n    const navigate = useNavigate();\n    const [jobForm, setJobForm] = useState({\n        title: '',\n        location: '',\n        companyName: '',\n        description: '',\n        employerEmail: '',\n        companyLink: '',\n        postdate: '',\n    });\n    const [myJob, setMyJob] = useState([])\n\n    // 用axios making api request to local node server    \n    // axios.get(one url)是从前段往后端发送get信息，根据url，return的东西叫“promise”\n    // promise is Java scripts way of doing asynchronous data handling.\n    // 既然promise回来了，我要access to this data and use it\n\n    // axios有一个async问题\n\n    // function getMyPokemon() {\n    //     axios.get('/api/job/myjob')\n    //         .then(response => setMyPokemon(response.data))\n    //         .catch(error => console.log(error));\n    // }\n\n\n    // useEffect(getMyPokemon, []);\n\n\n    const jobElement = [];\n    for (let job of myJob) {\n        jobElement.push(<div>{job.title} - {job.location} - {job.companyName}</div>);\n    }\n\n\n    return (\n        <div>\n            <h5>Title:</h5>\n            <input value={jobForm.title}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    title: e.target.value\n                })} ></input>\n            <h5>Location:</h5>\n            <input value={jobForm.location}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    location: e.target.value\n                })} ></input>\n            <h5>Company Name:</h5>\n            <input value={jobForm.companyName}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyName: e.target.value\n                })} ></input>\n\n            <h5>Description:</h5>\n            <input value={jobForm.description}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    description: e.target.value\n                })} ></input>\n\n            <h5>EmployerEmail:</h5>\n            <input value={jobForm.employerEmail}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    employerEmail: e.target.value\n                })} ></input>\n\n            <h5>Company Link:</h5>\n            <input value={jobForm.companyLink}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    companyLink: e.target.value\n                })} ></input>\n\n            <h5> Post Date:</h5>\n            <input value={jobForm.postdate}\n                onChange={e => setJobForm({\n                    ...jobForm,\n                    postdate: e.target.value\n                })} ></input>\n\n            <button onClick={\n                () => axios.post('/api/jobs/createJob/', jobForm)\n                    .then(response => {\n                        // getMyJob()\n                        console.log(response)\n                    })\n                    .catch(error => console.error(error))\n            }>\n                Submit\n            </button>\n            {jobElement}\n        </div>\n    )\n\n\n}",{"ruleId":"79","severity":1,"message":"80","line":37,"column":27,"nodeType":"81","endLine":37,"endColumn":29,"suggestions":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":6,"column":1,"nodeType":"93","endLine":38,"endColumn":2},{"ruleId":"79","severity":1,"message":"94","line":21,"column":35,"nodeType":"81","endLine":21,"endColumn":37,"suggestions":"95"},{"ruleId":"79","severity":1,"message":"80","line":37,"column":27,"nodeType":"81","endLine":37,"endColumn":29,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":6,"column":1,"nodeType":"93","endLine":60,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"98","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":13},{"ruleId":"87","severity":1,"message":"99","line":10,"column":25,"nodeType":"89","messageId":"90","endLine":10,"endColumn":39},{"ruleId":"87","severity":1,"message":"100","line":11,"column":12,"nodeType":"89","messageId":"90","endLine":11,"endColumn":26},{"ruleId":"79","severity":1,"message":"101","line":22,"column":33,"nodeType":"81","endLine":22,"endColumn":35,"suggestions":"102"},{"ruleId":"87","severity":1,"message":"103","line":2,"column":27,"nodeType":"89","messageId":"90","endLine":2,"endColumn":36},{"ruleId":"87","severity":1,"message":"104","line":6,"column":11,"nodeType":"89","messageId":"90","endLine":6,"endColumn":19},{"ruleId":"87","severity":1,"message":"105","line":16,"column":19,"nodeType":"89","messageId":"90","endLine":16,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'pokemonName'. Either include it or remove the dependency array.",["109"],["110"],"Assign arrow function to a variable before exporting as module default","'now' is defined but never used.","'setSearchedJob' is assigned a value but never used.","'searchedResult' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchedJob'. Either include it or remove the dependency array.",["111"],"'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'setMyJob' is assigned a value but never used.",{"desc":"112","fix":"113"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [navigate]",{"range":"119","text":"120"},"Update the dependencies array to be: [pokemonName]",{"range":"121","text":"122"},{"range":"123","text":"120"},"Update the dependencies array to be: [searchedJob]",{"range":"124","text":"125"},[1134,1136],"[navigate]",[605,607],"[pokemonName]",[1134,1136],[665,667],"[searchedJob]"]